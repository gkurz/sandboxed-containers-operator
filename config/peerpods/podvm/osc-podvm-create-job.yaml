apiVersion: batch/v1
kind: Job
metadata:
  name: osc-podvm-image-creation
  namespace: openshift-sandboxed-containers-operator
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 1
  template:
    metadata:
      name: osc-podvm-image-creation
    spec:
      # Add initContainers to pull the image from the registry and copy
      # /podvm-binaries.tar.gz /payload/podvm-binaries.tar.gz
      initContainers:
        - name: copy
          image: quay.io/openshift_sandboxed_containers/openshift-sandboxed-containers-podvm-payload:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Copying the payload files"
              cp /podvm-binaries.tar.gz /payload/podvm-binaries.tar.gz || exit 1
              echo "Copied the payload files successfully"
          volumeMounts:
            - name: payload
              mountPath: /payload
      containers:
        - name: create
          # Binaries like kubectl, packer and yq are expected to be under /usr/local/bin
          # podvm binaries are expected to be under /payload/podvm-binaries.tar.gz
          image: quay.io/openshift_sandboxed_containers/openshift-sandboxed-containers-podvm-builder:latest
          # This image contains the following
          # azure-podvm-image-handler.sh script under /scripts/azure-podvm-image-handler.sh
          # aws-podvm-image-handler.sh script under /scripts/aws-podvm-image-handler.sh
          # sources for cloud-api-adaptor under /src/cloud-api-adaptor

          securityContext:
            runAsUser: 0 # needed for container mode dnf access
          envFrom:
            - secretRef:
                name: peer-pods-secret
            - configMapRef:
                name: peer-pods-cm
                optional: true
            - configMapRef:
                name: azure-podvm-image-cm
                optional: true
            - configMapRef:
                name: aws-podvm-image-cm
                optional: true
          command: ["/podvm-builder.sh", "create"]
          volumeMounts:
            - name: payload
              mountPath: /payload
      volumes:
        - name: payload
          emptyDir: {}
      restartPolicy: Never
